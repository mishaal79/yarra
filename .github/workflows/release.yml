name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v0.1.0)'
        required: true
        default: ''

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Release - ${{ matrix.platform.release_for }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: yarra
            asset_name: yarra-linux-amd64
          - release_for: Linux-aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary_name: yarra
            asset_name: yarra-linux-arm64
          - release_for: macOS-x86_64
            os: macos-latest
            target: x86_64-apple-darwin
            binary_name: yarra
            asset_name: yarra-macos-x86_64
          - release_for: macOS-arm64
            os: macos-latest
            target: aarch64-apple-darwin
            binary_name: yarra
            asset_name: yarra-macos-arm64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Install cross-compilation tools
        if: matrix.platform.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      # Create a GitHub release if triggered manually
      - name: Create Release
        id: create_release
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: Release ${{ github.event.inputs.version }}
          draft: false
          prerelease: false

      - name: Build release binary
        run: |
          cargo build --release --target ${{ matrix.platform.target }}
          cp target/${{ matrix.platform.target }}/release/${{ matrix.platform.binary_name }} ${{ matrix.platform.asset_name }}

      - name: Upload release artifacts (manual trigger)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ matrix.platform.asset_name }}
          asset_name: ${{ matrix.platform.asset_name }}
          asset_content_type: application/octet-stream

      - name: Upload release artifacts (release trigger)
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ matrix.platform.asset_name }}
          asset_name: ${{ matrix.platform.asset_name }}
          asset_content_type: application/octet-stream